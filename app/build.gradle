plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs.kotlin'
}

def apiKeysProperties = new Properties()
apiKeysProperties.load(new FileInputStream(rootProject.file("apikeys.properties")))

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId "ru.lyrian.location_tracker"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField 'String', "yandexMapApiKey", apiKeysProperties.getProperty("yandexMapApiKey")
            buildConfigField 'String', "firebaseRealtimeDatabaseUrl", apiKeysProperties.getProperty("firebaseRealtimeDatabaseUrl")
        }
    }

    compileOptions {
        // Enable support of new Java 8 features for minSdkVersion below 26
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // UI
    implementation("com.google.android.material:material:1.5.0")

    // SplashScreen API
    implementation 'androidx.core:core-splashscreen:1.0.0-beta01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Navigation Component for Kotlin
    def navigationComponentVersion = "2.3.5"
    implementation("androidx.navigation:navigation-fragment-ktx:$navigationComponentVersion")
    implementation("androidx.navigation:navigation-ui-ktx:$navigationComponentVersion")

    // Dagger2
    def daggerVersion = '2.40.5'
    implementation("com.google.dagger:dagger:$daggerVersion")
    kapt("com.google.dagger:dagger-compiler:$daggerVersion")

    // Dagger-Android
    implementation("com.google.dagger:dagger-android:$daggerVersion")
    implementation("com.google.dagger:dagger-android-support:$daggerVersion")
    kapt("com.google.dagger:dagger-android-processor:$daggerVersion")

    // Firebase
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation('com.google.firebase:firebase-auth-ktx')
    implementation('com.google.firebase:firebase-database-ktx')

    // RX
    implementation('io.reactivex.rxjava2:rxjava:2.2.21')
    implementation('io.reactivex.rxjava2:rxandroid:2.1.1')
    implementation("io.reactivex.rxjava2:rxkotlin:2.4.0")

    // Yandex MapKit Lite
    implementation('com.yandex.android:maps.mobile:4.0.0-lite')

    // Room
    def room_version = '2.4.1'
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-rxjava2:$room_version")

    // WorkManager Kotlin with RxJava
    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"

    // JUnit4
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.11.2'

    // Enable support of new Java 8 features for minSdkVersion below 26
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}